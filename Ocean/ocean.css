/*
 * heavily inspired by this theme:
 * https://github.com/EliverLara/Juno/tree/ocean
 * thanks <3333
*/

body.ocean {
    /*
    * custom variables to be more expressive about what the colors actually set.
    * (not that heroic folks did a bad job naming these!)
    */
    --text: #BFC3C4;
    --custom-accent: #00A9A5;
    --custom-accent-hover: #14a5a3; 
    --background: #131520;
    --secondary-background: #0F111A;

    --button-background: #1d2030;
    --button-text: white;

    --box-shadow-color: #969696;
    --secondary-box-shadow-color: #707070;
    --tertiary-box-shadow-color: #727272;

    --focus-outline: var(--custom-accent) solid 1px;

    --box-shadow: 0 0 0 0 var(--box-shadow-color); 
    --secondary-box-shadow: var(--box-shadow-color);

    --border-radius: var(--space-xs);

    --accent: var(--custom-accent);
    /*The text in the navbar, of the selected element*/
    /*--accent-overlay: #fefefe;*/
    --accent-overlay: var(--custom-accent);
    /*The text in the navbar, which isn't selected*/
    --navbar-accent: var(--text);
    
    --body-background: var(--background);
    --background-darker: var(--background);
    --current-background: var(--background);
    --navbar-background: var(--secondary-background);
    --navbar-active-background: var(--custom-accent);
    --gradient-body-background: var(--background);
    --input-background: var(--secondary-background);
    --modal-background: var(--background);
    --modal-border: #ffffffff;
    --download-button: #44475a;
    --download-button-overlay: #007bff;
    --success: var(--custom-accent);
    --success-hover: var(--custom-accent-hover);
    --primary: var(--custom-accent);
    --primary-hover: var(--custom-accent-hover);
    --danger: #ff0000;
    --text-title: #00ddff;
    --icons-background: var(--background);
    --osk-background: var(--background);
    --osk-button-background: var(--secondary-background);
    --osk-button-border: #ffffffff;
}

body.ocean .Field>input, 
body.ocean select, 
body.ocean .gameCard, 
body.ocean .gameCard>span,
body.ocean .SearchBar,
body.ocean .progressHeader,
body.ocean .dmItemList
{
  box-shadow: var(--box-shadow) !important;
  background-color: var(--button-background);
}

/* 
Input header on the main page: 

- .FormControl is the class for the store Filters, the platform filters, the action stuff (like sorting, show hidden, ...)
- .SearchBar is the container for:
  - .searchButton (the icon)
  - .searchInput 
  - .autoComplete <ul>
*/

/* Search text input + autocomplete */ 
body.ocean .Header__search {
  height: 50px;
  
}

body.ocean .SearchBar {
  /* I know this is duplicated but I want to seperate the css a bit */
  box-shadow: var(--box-shadow) !important;
  background-color: var(--button-background);

  left: 0;
  right: 0;
  top: 0;
  position: absolute;

  display: grid;
  grid-template-columns: auto 1fr auto;
  grid-template-rows: 34px auto 1fr;

  max-width: 450px;
}

body.ocean .searchButton {
  grid-row: 1;
  grid-column: 1;
}

body.ocean .searchBarInput {
  grid-row: 1;
  grid-column: 2;
}

body.ocean .clearSearchButton {
  grid-row: 1;
  grid-column: 3;
}

body.ocean .SearchBar:focus-within .autoComplete {
  border-top: 1px solid var(--custom-accent) ;

  display: inline-grid;
  border-radius: 0 0 var(--border-radius) var(--border-radius);

  background-color: var(--button-background);

  padding-top: var(--space-md);
  margin-top: var(--space-xs);
  margin-bottom: calc(var(--space-xs) * -1);

  position: relative;
  top: 0;

  width: calc(100% + var(--space-xs) * 2);
  grid-row: 3;

  grid-column-start: 1;
  grid-column-end: 4;
}

body.ocean .SearchBar .autoComplete::-webkit-scrollbar {
  background: none;
}

/* filter */
body.ocean .Header__filters {
  height: 100%;
  min-height: 35px;
}

body.ocean .platformFilters {
  margin: 0;
}

body.ocean .storeFilter {
  margin: auto 24px;
}

body.ocean .SearchBar
{
  border-radius: var(--border-radius);
}

body.ocean *:has(>.FormControl) {
  height: 100%;
}

body.ocean .FormControl {
  height: 100%;

  background: var(--button-background);
  color: var(--button-text);
  box-shadow: var(--box-shadow);
  border-radius: var(--border-radius);
}

body.ocean .FormControl .FormControl__button:first-child {
  border-radius: var(--border-radius) 0 0 var(--border-radius) !important;
}

body.ocean .FormControl .FormControl__button:last-child {
  border-radius: 0 var(--border-radius) var(--border-radius) 0 !important;
}

body.ocean .FormControl__button:hover,
body.ocean .FormControl__button.active  {
  background: var(--custom-accent) !important;
}

body.ocean .ActionIcons .FormControl__button>svg{
  margin: auto;
}

/* card stuff */

body.ocean .store-icon {
  background: none;
}

body.ocean .Sidebar {
  box-shadow: 0 0 0 0 var(--box-shadow-color);
}

body.ocean .divider {
  height: 1px;
  margin: var(--space-3xs) 0 !important;
}

body.ocean .dmItemList {
  border: none;
}

body.ocean .downloadManagerListItem {
  border-top: none !important;
  box-shadow: 0 -1px 0 0 var(--tertiary-box-shadow-color);

  margin: 0;
  padding: var(--space-md) var(--space-sm-fixed);
}

body.ocean .numberOfgames {
  background: none;
}

body.ocean .SearchBar,
body.ocean .gameCard,
body.ocean .Field>input, 
body.ocean select, 
body.ocean .progressHeader,
body.ocean .dmItemList,
body.ocean .svg-button
{
  border-radius: var(--border-radius);
}

body.ocean .SearchBar:focus-within,
body.ocean .gameCard:focus-within,
body.ocean .Field>input:focus-within, 
body.ocean select:focus-within, 
body.ocean .progressHeader:focus-within,
body.ocean .dmItemList:focus-within,
body.ocean .svg-button:focus-within {
  outline: var(--focus-outline);
}

body.ocean .searchButton svg:focus {
  outline: none;
}

body.ocean .toggle,
body.ocean .gameConfigContainer .titleWrapper .settings-icon {
  color: var(--button-text) !important;
  background: var(--button-background) !important;
}


/*
* The filters and simmilar stuff in the Library thingie
*/






/*
* All default Buttons,
* and their hovering
*/
body.ocean *:not(.submenu)>.button,
body.ocean .sideloadGameButton,
body.ocean .titleWrapper .svg-button, 
body.ocean .game-actions  {
  background: var(--button-background);
  color: var(--button-text) !important;
  box-shadow: var(--box-shadow);
  
  border-radius: var(--border-radius);

  transition: 0s;
}

body.ocean *:not(.submenu).button:hover,
body.ocean .sideloadGameButton:hover,
body.ocean .titleWrapper .svg-button:hover, 
body.ocean .titleWrapper .settings-icon:hover {
  box-shadow: var(--box-shadow);

  background: var(--custom-accent) !important;
  color: var(--button-text);
}

body.ocean .Sidebar__item:hover .Sidebar__itemIcon,
body.ocean .Sidebar__item:hover span,
body.ocean .Sidebar__item.active .Sidebar__itemIcon,
body.ocean .Sidebar__item.active span {
  color: var(--button-text);
}

/* more dynamic cards */

body.ocean .gameList {
  display: flex;
  flex-direction: row;

  flex-wrap: wrap;
  align-items: stretch;
  align-content: stretch;
}


body.ocean .gameList div {
  min-width: 200px;
  width: 200px;
  height: 300px;

  flex-grow: 1;
}

body.ocean .gameList div > div {
  width: 100%;
}

body.ocean .gameList .gameCard {
  align-items: center;
  align-content: center;
}

/*
body.ocean .gameList div:last-child {
  grid-column-end: -1;
  column-span: all;
}

body.ocean .gameList div:first-child .gameCard {
  aspect-ratio: auto;
}
*/
